#!/usr/bin/env python3
"""
Environment Setup Script for Image Analysis with CLIP and LLM

This script helps you set up your .env file with the correct configuration.
It will create a .env file with your OpenAI API key and other settings.
"""

import os
import sys
from pathlib import Path

def create_env_file():
    """Create a .env file with user input"""
    
    print("🔧 Image Analysis Environment Setup")
    print("=" * 50)
    print()
    
    # Check if .env already exists
    env_file = Path('.env')
    if env_file.exists():
        response = input("⚠️  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("❌ Setup cancelled.")
            return
    
    # Get OpenAI API key
    print("🔑 OpenAI API Key Configuration")
    print("-" * 30)
    api_key = input("Enter your OpenAI API key: ").strip()
    
    if not api_key:
        print("❌ OpenAI API key is required!")
        return
    
    # Get other settings
    print("\n⚙️  Other Settings (press Enter for defaults)")
    print("-" * 40)
    
    web_port = input("Web interface port (default: 5051): ").strip() or "5051"
    clip_server = input("CLIP API server URL (default: http://localhost:7860): ").strip() or "http://localhost:7860"
    
    # Create .env content
    env_content = f"""# =============================================================================
# Image Analysis with CLIP and LLM - Environment Configuration
# =============================================================================
# Generated by setup_env.py

# =============================================================================
# CLIP API Configuration
# =============================================================================
API_BASE_URL={clip_server}
CLIP_MODEL_NAME=ViT-L-14/openai

# =============================================================================
# Analysis Features
# =============================================================================
ENABLE_CLIP_ANALYSIS=True
ENABLE_LLM_ANALYSIS=True
ENABLE_METADATA_EXTRACTION=True
ENABLE_PARALLEL_PROCESSING=False

# =============================================================================
# Directory Configuration
# =============================================================================
IMAGE_DIRECTORY=Images
OUTPUT_DIRECTORY=Output

# =============================================================================
# CLIP Analysis Modes
# =============================================================================
CLIP_MODES=best,fast,classic,negative,caption

# =============================================================================
# Prompt Configuration
# =============================================================================
PROMPT_CHOICES=P1,P2

# =============================================================================
# LLM Configuration
# =============================================================================
# OpenAI API Key - SET THIS IN ONE PLACE ONLY!
OPENAI_API_KEY={api_key}

# OpenAI API URL (usually don't need to change)
OPENAI_URL=https://api.openai.com/v1

# Ollama server URL
OLLAMA_URL=http://localhost:11434

# =============================================================================
# Database Configuration
# =============================================================================
DATABASE_PATH=image_analysis.db

# =============================================================================
# Web Interface Configuration
# =============================================================================
WEB_PORT={web_port}

# =============================================================================
# Processing Configuration
# =============================================================================
LOGGING_LEVEL=INFO
RETRY_LIMIT=5
TIMEOUT=60
FORCE_REPROCESS=False
GENERATE_SUMMARIES=True

# =============================================================================
# Development Configuration
# =============================================================================
DEBUG=True

# =============================================================================
# Status Messages
# =============================================================================
EMOJI_SUCCESS=✅
EMOJI_WARNING=⚠️
EMOJI_ERROR=❌
EMOJI_INFO=ℹ️
"""
    
    # Write .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        
        print(f"\n✅ Successfully created .env file!")
        print(f"📁 Location: {env_file.absolute()}")
        print(f"🔑 OpenAI API Key: {'*' * (len(api_key) - 8) + api_key[-8:] if len(api_key) > 8 else '***'}")
        print(f"🌐 Web Interface: http://localhost:{web_port}")
        print(f"🔗 CLIP Server: {clip_server}")
        
        print("\n🚀 Next steps:")
        print("1. Start the web interface: python -c \"from src.viewers.web_interface_refactored import WebInterface; WebInterface().run(host='0.0.0.0', port=5051, debug=True)\"")
        print("2. Open http://localhost:5051 in your browser")
        print("3. Go to LLM Configuration to add ChatGPT models")
        
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")
        return

def main():
    """Main function"""
    try:
        create_env_file()
    except KeyboardInterrupt:
        print("\n❌ Setup cancelled by user.")
    except Exception as e:
        print(f"❌ Setup failed: {e}")

if __name__ == "__main__":
    main() 